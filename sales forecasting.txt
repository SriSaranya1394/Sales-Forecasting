import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

data = pd.read_csv('sales_data.csv', parse_dates=['date'])

data['month'] = data['date'].dt.to_period('M').dt.to_timestamp()

monthly_sales = data.groupby('month')['sales'].sum().reset_index()

monthly_sales['month_num'] = range(len(monthly_sales))  # Numeric representation of months
X = monthly_sales[['month_num']]  # Features
y = monthly_sales['sales']  # Target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

model = LinearRegression()
model.fit(X_train, y_train)

future_months = pd.DataFrame({'month_num': range(len(monthly_sales), len(monthly_sales) + 12)})
future_sales = model.predict(future_months)

plt.figure(figsize=(12, 6))
plt.plot(monthly_sales['month'], monthly_sales['sales'], label='Historical Sales', marker='o')

future_dates = pd.date_range(start=monthly_sales['month'].iloc[-1] + pd.DateOffset(months=1), periods=12, freq='M')
plt.plot(future_dates, future_sales, label='Forecasted Sales', color='red', marker='o')

plt.title('Sales Forecast')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.xticks(rotation=45)
plt.legend()
plt.tight_layout()
plt.show()
